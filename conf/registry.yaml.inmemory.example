# registries configuration
modules:
  - name: schema-registry
    className: com.hortonworks.registries.schemaregistry.webservice.SchemaRegistryModule
    config:
      schemaProviders:
        - providerClass: "com.hortonworks.registries.schemaregistry.avro.AvroSchemaProvider"
          defaultSerializerClass: "com.hortonworks.registries.schemaregistry.serdes.avro.AvroSnapshotSerializer"
          defaultDeserializerClass: "com.hortonworks.registries.schemaregistry.serdes.avro.AvroSnapshotDeserializer"
      # schema cache properties
      # inmemory schema versions cache size
      schemaCacheSize: 10000
      # inmemory schema version cache entry expiry interval after access
      schemaCacheExpiryInterval: 3600

# HA configuration
#haConfig:
#  className: com.hortonworks.registries.ha.zk.ZKLeadershipClient
#  config:
#    # This url is a list of ZK servers separated by ,
#    connect.url: "localhost:2181"
#    # root node prefix in ZK for this instance
#    root: "/registry"
#    session.timeout.ms: 30000
#    connection.timeout.ms: 20000
#    retry.limit: 5
#    retry.base.sleep.time.ms: 1000
#    retry.max.sleep.time.ms: 5000

# Filesystem based jar storage
fileStorageConfiguration:
  className: "com.hortonworks.registries.common.util.LocalFileSystemStorage"
  properties:
    directory: "/tmp/schema-registry/jars"

# storage provider configuration
storageProviderConfiguration:
 providerClass: "com.hortonworks.registries.storage.impl.memory.InMemoryStorageManager"

#swagger configuration
swagger:
  resourcePackage: com.hortonworks.registries.schemaregistry.webservice

#enable CORS, may want to disable in production
enableCors: false

server:
  rootPath: '/api/*'
  applicationConnectors:
    - type: http
      port: 9090

# Logging settings.
logging:
  level: INFO
  loggers:
    com.hortonworks.registries: INFO

  